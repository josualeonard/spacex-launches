{"version":3,"sources":["spacex-logo.png","components/LaunchItem.js","components/LaunchItems.js","components/MissionKey.js","components/Launches.js","components/LaunchContent.js","components/Launch.js","App.js","reportWebVitals.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","LAUNCHES_QUERY","gql","LaunchItems","useQuery","loading","error","data","console","log","launches","map","idx","MissionKey","Launches","Component","LAUNCH_QUERY","LaunchContent","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","Launch","this","props","match","params","parseInt","client","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","src","logo","alt","style","height","display","margin","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bef46c60.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spacex-logo.564be1b8.png\";","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function LaunchItem({ launch: { flight_number, mission_name, launch_date_local, launch_success }}) {\r\n    \r\n    return (\r\n        <div className=\"card card-body mb-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9\">\r\n                    <h4>Mission: <span className={classNames({\r\n                        'text-success': launch_success,\r\n                        'text-danger': !launch_success\r\n                    })}>{ mission_name }</span></h4>\r\n                    <p>Date: <Moment format=\"YYYY-MM-DD HH:mm\">{ launch_date_local }</Moment></p>\r\n                </div>\r\n                <div className=\"col-md-3 text-right\">\r\n                    <Link to={`/launch/${flight_number}`} className=\"btn btn-primary\">Launch Details</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from \"@apollo/client\";\r\nimport LaunchItem from './LaunchItem';\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n    query LaunchesQuery {\r\n        launches {\r\n            flight_number\r\n            mission_name\r\n            launch_date_local\r\n            launch_success\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function LaunchItems() {\r\n    const { loading, error, data } = useQuery(LAUNCHES_QUERY);\r\n    if(loading) {\r\n        return <h4>Loading...</h4>\r\n    }\r\n    if(error) {\r\n        console.log(error);\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n        {data.launches.map((launch, idx) => {\r\n            return <LaunchItem key={idx+launch.flight_number} launch={launch} />\r\n        })}\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function MissionKey() {\r\n    return (\r\n        <div className=\"my-3\">\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-success\" /> = Success\r\n            </p>\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-danger\" /> = Fail\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport LaunchItems from './LaunchItems';\r\nimport MissionKey from './MissionKey';\r\n\r\nexport class Launches extends Component {\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h1 className=\"display-4 my-3\">Launches</h1>\r\n                <MissionKey />\r\n                <LaunchItems />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Launches;","import React, { Fragment } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\nconst LAUNCH_QUERY = gql`\r\n    query LaunchQuery($flight_number: Int!) {\r\n        launch(flight_number: $flight_number) {\r\n            flight_number\r\n            mission_name\r\n            launch_year\r\n            launch_success\r\n            launch_date_local\r\n            rocket {\r\n                rocket_id\r\n                rocket_name\r\n                rocket_type\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function LaunchContent({ flight_number }) {\r\n    const { loading, error, data } = useQuery(LAUNCH_QUERY, {\r\n        variables: { flight_number },\r\n    });\r\n    if(loading) {\r\n        return <h1 className=\"display-4 my-3\">\r\n            <span className=\"text-light\">Mission:</span> loading...\r\n        </h1>\r\n    }\r\n    if(error) {\r\n        console.log(error);\r\n    }\r\n\r\n    const {\r\n      mission_name,\r\n      launch_year,\r\n      launch_success,\r\n      rocket: { rocket_id, rocket_name, rocket_type },\r\n    } = data.launch;\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"display-4 my-3\">\r\n                <span className=\"text-light\">Mission:</span> { mission_name }\r\n            </h1>\r\n            <h4 className=\"mb-3\">Launch Details</h4>\r\n            <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">Flight Number: { flight_number }</li>\r\n                <li className=\"list-group-item\">Launch Year: { launch_year }</li>\r\n                <li className=\"list-group-item\">Launch Successful:{' '}\r\n                    <strong className={classNames({\r\n                        'text-success': launch_success,\r\n                        'text-danger': !launch_success\r\n                    })}>{launch_success?'Yes':'No'}</strong>\r\n                </li>\r\n            </ul>\r\n            <h4 className=\"my-3\">Rocket Details:</h4>\r\n            <ul className=\"list-group mb-4\">\r\n                <li className=\"list-group-item\">Rocket ID: { rocket_id }</li>\r\n                <li className=\"list-group-item\">Rocket Name: { rocket_name }</li>\r\n                <li className=\"list-group-item\">Rocket Type: { rocket_type }</li>\r\n            </ul>\r\n            <Link to=\"/\" className=\"btn btn-primary\">Back</Link>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport LaunchContent from './LaunchContent';\r\n\r\nexport class Launch extends Component {\r\n    render() {\r\n        let { flight_number } = this.props.match.params;\r\n        flight_number = parseInt(flight_number);\r\n\r\n        return (\r\n            <div>\r\n                <h1>Launch</h1>\r\n                <LaunchContent flight_number={flight_number} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Launch\r\n","import {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  //useQuery,\n  //gql,\n} from \"@apollo/client\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport logo from './spacex-logo.png';\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <header className=\"p-4\">\n            <img src={logo} alt=\"SpaceX\" style={{height: 25, display: 'block', margin: 'auto'}} />\n          </header>\n          <Route exact path=\"/\" component={Launches}></Route>\n          <Route exact path=\"/launch/:flight_number\" component={Launch}></Route>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}